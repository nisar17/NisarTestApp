************************************************************************************************************
 Project Exp
************************************************************************************************************

My Name is Muhammed Nisar PK.
I am an Eng graduate in Compiuter science.

Currently working as a senoir software engineer with Rapidvalue.
I have 6.3 years of experience in Software industry.

I have good skill in both manual and autonation testing.

The previouse project I worked is Riverbed QA engagement TAAS ,Steel head ,it is a wan opti device.
In this project i used jenkins,testrail,bugzilla and test automation tool GRiTS.
Jenkins is solely used by QA for scheduling and executing automation. Jenkins jobs are used for executing test cases located in Testrail.
Testrail is used primarily for the reporting aspect of testing, but it also is used for creating and executing manual test cases.
Here we used to perform FIT and PR tests.
Fit is performed to ensure the quality of Feature integration test 
and PR is used to perform point release regression.
On test failure we used to triagge issues and fix issues to complete the test run,
we used to report bugs when test fails because of product issues.
1.5 years of automation.

The other major project was Shippalm Synergy, it is a ship operation management application.
I have worked with 2 major modules of this project , Crewmanagement and Portage bill .
In this project i used Sele selenium hybrid framework using java and testng,TFS,SVN .
TFS is used for creating and executing test cases and reporting bug.
Here we used selenium to perform only sanity and regression test.
2.5 years of automation.

my project exp include both web and nw applications.
I am an ISTQB  Foundation level certified tester( International Software Testing Qualifications Board)

************************************************************************************************************
Most challenged project:
************************************************************************************************************

Most challenged project was Riverbed.
When compare to the previouse project , this is a network project.
It was a challenge to get familiar with new things in short period of time.
The complexity of test cases were bit high  like test cases includes memory leak tests.

************************************************************************************************************
Most challenged issue:
************************************************************************************************************

One of the most challenging issue happened in selenium was when I was working with shippalm geolocation screen.  .Here google map was used for geolocation. I wanted to verify the labels over the map after double clicking at a particular region of the map.
My challenge was to find a locater over the map to perform double click and getText , but it was not possible in any of the usual methods.
After my research I came to know that the map is implemented using html5 canvas, and it will function like an image over the screen.it is not possible to inspect elements over the map .

The following solutions are used to fix this issue. 
1.	Used actions class, moveByOffset(500, 500).doubleClick().build(); over the entire screen and mouse moved to the position  located by x and y . I was worked.
2.	Next challenge was to compare a string with object shown in geolocator.
For this, rather than comparing strings, we used image comparison.  so the expected screen image  was stored in local storage  and result image was would be taken as screenshot during the test itself. 
Once the images are matching the test will be pass  other wise the test will be fail
	Code:

	try{
	driver.manage().window().maximize(); 
        driver.get("https://developers.google.com/maps/documentation/javascript/adding-a-google-map");
		 driver.manage().timeouts().pageLoadTimeout(50,TimeUnit.SECONDS);
		 
		 JavascriptExecutor js=(JavascriptExecutor)driver;
		 js.executeScript("window.scrollBy(0,500)");
		 
		 Actions actions=new Actions(driver);
		 Action clickcentre = actions.moveByOffset(500,500).doubleClick().build();
		 clickcentre.perform();
		 
		  Pattern img = new Pattern("C:\\Users\\Kaiju\\Downloads\\vallathole.PNG");
		  Finder f1=new Finder(img.getImage());
		  File scrfile=((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
		  FileUtils.copyFile(scrfile,new File("C:\\Users\\Kaiju\\Downloads\\vallathole1.PNG"));
		  Pattern img1 = new Pattern("C:\\Users\\Kaiju\\Downloads\\vallathole1.PNG");
		  f1.find(img1);
		  if(f1.hasNext()){
		  org.sikuli.script.Match m=f1.next();
		  System.out.println("verified");
		  f1.destroy();}
		  else{
			  System.out.println("not verified"); 
		  }
		}catch(Throwable t){
			
			// Report error in Application logs
			APPLICATION_LOGS.debug("Error while navigating -"+ object + t.getMessage());
					   
		}
		return "Pass";


In riverbed project, there was an issue happened because of gitlab privatisation.
It is observed when suddenly all the Integration tests were getting failed.
I used to triage the issue as per the usual triaging steps like test environment status check, reinstall the application, network connectivity etc. but still, the issue not got resolved.
Later I decided to check the test from machine to machine with the help of test log and found that one config file content downloaded from git lab was not properly updated and it shows redirection to gitlab login page. I inferred that this is because of permission issue for this Jenkins user in gitlab and found that it is because of the gitlab privatisation happened in previouse week.suggested customer to enable a private token for this user for the time being and resolved this issue.

curl --request GET --header 'PRIVATE-TOKEN: 9koXpg98eAheJpvBs5tK' 'https://gitlab.example.com/api/v4/projects/13083/repository/files/app%2Fmodels%2Fkey%2Erb/raw?ref=master'

************************************************************************************************************
team or individual
************************************************************************************************************

more idea comes  productivity increases
enables communication opertunties and lstening opertunities
during crisis member get supports

but Making decisions can take longer bcause of multiple opinions
emlpoy sit back and not do anything will demotivate the team

************************************************************************************************************
explain framework
************************************************************************************************************

hybrid frame work using java and test ng and selenium
the frame work used html for reports and log4j for loging 
objects and config are in properties file
poi is used to enable xlfile reader , this is used for test controller sheet/suit and test data mgmt .
scripts are driver scripts to control etire f/w with help of key words,common functions and project scripts.
monitorin mail for sendmail, Testconfig for mail data,screenshotpath and db details.
testutil for zip,screenshot etc
explain flow of framework including driver script

run from our machine after svn checkout
results will be emailed and necessary files will be copied todeliverable paths.

************************************************************************************************************
things before start automation project. approach to a new autmation project. best practices for automation:
************************************************************************************************************.

The test automation is converting our manual tests into test scripts.
1. so here we need to consider the project environment, tools and technology we are used in the project supported by the automation tool
a feasibility study would be good in earlier stage. if the application is a web based app ,then selenium java is a best option.
 if network means opython is best for automation.
2. prepare atleast 2 POC proof of concept by considering few parameters like 
3.  availability of technical support to perform test using the tool.Selenium has more communities online to support.
	budget and availability of resources within the budget. selenium is open source most cost effective when compare to other available tools.
4.support with reporting tools/ integration with test management tool.  
5.support with continuouse integration tool. Selenium projects can be integrated with tools like jenkins.
6.The application should be stable at least for 2,3 modules and manual test should performed before.
7.choose framework with maximum reusable components.

************************************************************************************************************
steps if build didnt met customer expectation:
************************************************************************************************************

1.find the reason and communicate reason.
2.doing corrective actions. eg: 
3.finding preventive actions and impliment. eg:
4.requirement level-find proper methods to get requirements,review requirements,testcases,
  skill level-provide trainings,
  periodical audits to verify .

************************************************************************************************************
handling different environment for diffent tests like qa,uat:
************************************************************************************************************

sanity test and regression test performed using selenium.
in case of selenium, each envirmnets were different with diffrent servers,
so the app url ,username and password ,browser,controller sheet/suit based on test will be different 
The code remins same but we can customize config part for this. additionally we can have to change email groups,
db connections,


************************************************************************************************************
Tool used for CI -jenkins: 
************************************************************************************************************
job-
new job - freestyle project
General settings- Description,Git url,parameter,enable or disable
Source code mgmt- Git =-git link url,credentials and branch
                  SVN,/none
Build trigger -build Periodically 
               # every fifteen minutes (perhaps at :07, :22, :37, :52)
		H/15 * * * *  
		Poll scm  -same as periodical but check scm repop for changes
Build environment-Delete workspace before build starts,Abort the build if it's stuck, etc
Build -can add build steps : execute windows batch ,build visual studio project - if plugin configured , execute shen , invoke ANT.
Post build actions-archive artifacts,email notification,delete work space etc

java -jar jenkins.war
(jenkins_url)/safeRestart - Allows all running jobs to complete. New jobs will remain in the queue to run after the restart is complete.
(jenkins_url)/restart - Forces a restart without waiting for builds to complete.
setting jobs,config slave machines and run 
Manage Jenkins -Configuration-                jenkins url,email notification smtp server,time format etc
Manage Jenkins -Global Tool Configuration     Git,Maven,Ant,MSbuild path
Manage Jenkin-sManage plugins - msbuild,git,email notification,svn and ANT
Manage Jenkin-sManage nodes- new- validating console output .
 eg :launch slave agent via java web start
   after complte the details in slave config - will get a jar/link
   open the jar in same slave which will show the connected msg
	 -‘Git plugin/ install /restart and check  Source code Management section, you will now see ‘Git’ as an option.


************************************************************************************************************
git 
************************************************************************************************************
git revert <name of bad commit>

Stashing takes your working directory that is, your modified tracked files and staged changes and saves it on a stack of unfinished changes that you can reapply at any time.

git reset –soft HEAD~1

git pull does a git fetch followed by a git merge

git log  command to view log details. [jerry@CentOS project]$ git log, details like commit id,commit ,auther,date,message (all commits)

git show command to view the commit details. The git show command takes SHA-1 commit ID as a parameter.
[jerry@CentOS project]$ git show cbe1249b140dad24b2c35b15cc7e26a6f02d2277, details of git log+ code diff

git diff shows diffrence between current and new ++ and -- 

git push-The Push operation stores data permanently to the Git repository. After a successful push operation, other developers can see changes :[jerry@CentOS project]$ git push origin master

In Git, the stash operation takes your modified tracked files, stages changes, and saves them on a stack of unfinished changes that you can reapply at any time.

[jerry@CentOS project]$ git status -s
M string.c
?? string
Now, you want to switch branches for customer escalation, but you don’t want to commit what you’ve been working on yet; so you’ll stash the changes. To push a new stash onto your stack, run the git stash command.

[jerry@CentOS project]$ git stash
Saved working directory and index state WIP on master: e86f062 Added my_strcpy function
HEAD is now at e86f062 Added my_strcpy function
Now, your working directory is clean and all the changes are saved on a stack. Let us verify it with the git status command.

[jerry@CentOS project]$ git status -s
?? string
Now you can safely switch the branch and work elsewhere. We can view a list of stashed changes by using the git stash list command.

[jerry@CentOS project]$ git stash list
stash@{0}: WIP on master: e86f062 Added my_strcpy function
Suppose you have resolved the customer escalation and you are back on your new feature looking for your half-done code, just execute the git stash pop command, to remove the changes from the stack and place them in the current working directory.

[jerry@CentOS project]$ git status -s
?? string

[jerry@CentOS project]$ git stash pop
The above command will produce the following result:

# On branch master
# Changed but not updated:
# (use "git add ..." to update what will be committed)
# (use "git checkout -- ..." to discard changes in working directory)

git mv used for rename / move 
git rm used to delete

delete branch: git branch -D test_branch

************************************************************************************************************
implicite wait /explicit wait/thread.sleep / mention dynamic elements
************************************************************************************************************
Implicite wait
***************
would like it to wait for a certain amount of time before throwing an exception that it cannot find the element on the page. We should note that implicit waits will be in place for the entire time the browser is open. This means that any search for elements on the page could take the time the implicit wait is set for.

driver.manage().Timeout.ImplicitlyWait(10,Timeunit.SECOND);

page load time out
*******************
driver.manage().Timeouts()Pageloadtimeout(10,Timeunit.SECONDS);

Thread.sleep.
******************

explicite wait
******************
can set it up to wait for any condition you might like. Usually, you can use some of the prebuilt ExpectedConditions to wait for elements to become clickable, visible, invisible, etc,some elements required more time so we set individually

WebdriverWait wait=new WebdriverWait(driver,10);
wait.untill(Expectedconditions.ElementTobeClickable(By.xpath("//[@id=1234]"));

visibilityofelement(Webelement);
visibilityofelementlocated(By.xpath);

ElementTobeClickable(element)
ElementTobeSelected
frametobeavailableandswitchtoit(fid/fname/flocator)

Fluent wait
*************
an element which sometime appears in just 1 second and some time it takes minutes to appear. In that case it is better to use fluent wait, as this will try to find element again and again until it find it or until the final timer runs ou


Wait wait = new FluentWait(driver)
 
    .withTimeout(30, SECONDS)
 
    .pollingEvery(5, SECONDS)
 
    .ignoring(NoSuchElementException.class);
 
 wait.until(new Function() {
 
    public WebElement apply(WebDriver driver) {
 
    return driver.findElement(By.id("foo"));
 
    }
 
   });
************************************************************************************************************
scenario:
************************************************************************************************************
4 web elements .
store search result into list

for (WebElement searchkey : resultkeys )
    {
        String str = searchkey.getText(); 
if(str.contains("searchstring"));

compare and return pass/fail
we have to pass url,username and password .
compare and return pass/fail

we have to pass url,username and password only for login .

************************************************************************************************************
Clean up:
************************************************************************************************************
logout (usually it will come as part of test)
disconnect opened connections like sql db connection
update test end time in result report
send email with log links and report links.
close driver
quit driver

************************************************************************************************************
browsers used:
************************************************************************************************************
chrome and firefox.
used to run one by one.based on the browser in config file it will run 

Reason Cross Browser Issues 
3. Font size mismatch in different browsers. 
4. JavaScript implementation can be different. 
5. CSS,HTML validation difference can be there. 
6. Some browser still not supporting HTML5. 
7. Page alignment and div size. 
8. Image orientation. 
9. Browser incompatibility with OS. Etc.
